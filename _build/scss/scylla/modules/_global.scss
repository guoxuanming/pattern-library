// ==================================================
//  MIXINS
// ==================================================

// Box Sizing
@mixin box-sizing($box-model:border-box) {
  -webkit-box-sizing: $box-model;
     -moz-box-sizing: $box-model;
      -ms-box-sizing: $box-model;
       -o-box-sizing: $box-model;
          box-sizing: $box-model;
}

// Border Radius (All Sides)
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

// Clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

$em-base: 16 !default;

// ==================================================
//  FUNCTIONS
// ==================================================

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, em-calc(#)
// Just enter the number, no need to mention "px"
@function em-calc($values, $base-value: $em-base) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

//Retaining this for backward compatability
@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
}

// Media Queries

$small-screen: 768px;
$medium-screen: 1280px;
$large-screen: 1440px;

$screen: "only screen";
$small: "only screen and (min-width: #{$small-screen})";
$medium: "only screen and (min-width: #{$medium-screen})";
$large: "only screen and (min-width: #{$large-screen})";
$landscape: "only screen and (orientation: landscape)";
$portrait: "only screen and (orientation: portrait)";

//// Cursors

//Custom use example -> $cursor-default-value: url(http://cursors-site.net/path/to/custom/cursor/default.cur),progress;

$cursor-crosshair-value: "crosshair";
$cursor-default-value: "default";
$cursor-pointer-value: "pointer";
$cursor-help-value: "help";

//
// Grid Variables
//

$row-width: em-calc(1280);
$column-gutter: em-calc(30);
$total-columns: 12;

// Set box-sizing globally to handle padding and border widths
*,
*:before,
*:after {
  @include box-sizing(border-box);
}

html,
body { font-size: $base-font-size; }

// Default body styles
body {
  background: $body-bg;
  color: $body-font-color;
  padding: 0;
  margin: 0;
  font-family: $body-font-family;
  font-weight: $body-font-weight;
  font-style: $body-font-style;
  line-height: 1; // Set to $base-line-height to take on browser default of 150%
  position: relative;
  cursor: $cursor-default-value;
}

a:hover { cursor: $cursor-pointer-value; }

// Override outline from normalize, we don't like it
a:focus { outline: none; }

// Grid Defaults to get images and embeds to work properly
img,
object,
embed { max-width: 100%; height: auto; }

object,
embed { height: 100%; }
img { -ms-interpolation-mode: bicubic; }

#map_canvas,
.map_canvas {
  img,
  embed,
  object { max-width: none !important;
  }
}

// Font smoothing
// Antialiased font smoothing works best for light text on a dark background.
// Apply to single elements instead of globally to body.
// Note this only applies to webkit-based desktop browsers on the Mac.
.antialiased { -webkit-font-smoothing: antialiased; }

// Get rid of gap under images by making them display: inline-block; by default
img {
  display: inline-block;
  vertical-align: middle;
}

//
// Global resets for forms
//

// Make sure textarea takes on height automatically
textarea { height: auto; min-height: 50px; }

// Make select elements 100% width by default
select { width: 100%; }